# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OM38aq617wONhEGJr3nc2SLoTxeBG27T
"""

import networkx as nx
import matplotlib.pyplot as plt
from scapy.all import *

def traceroute(destination, max_hops):
    # Set the destination and maximum number of hops
    dport = 33434  # Destination port for traceroute
    ttl = 1

    # Create an empty graph
    G = nx.Graph()

    prev_ip = None

    while True:
        # ICMP echo request packet with the specified TTL
        packet = IP(dst=destination, ttl=ttl) / ICMP()

 
        reply = sr1(packet, verbose=False, timeout=1)

        if reply is None:
            # No response received
            print(f"{ttl}. *")
        elif reply.type == 3:
            # Destination reached
            print(f"{ttl}. {reply.src}")
            break
        else:
            # Intermediate hop reached
            print(f"{ttl}. {reply.src}")

            if prev_ip is not None:
                # Add an edge to the graph between the current and previous hop
                G.add_edge(prev_ip, reply.src)

            prev_ip = reply.src

        # Increment TTL 
        ttl += 1

        if ttl > max_hops:
            # Maximum number of hops reached
            break

    # network graph
    pos = nx.spring_layout(G)
    nx.draw(G, pos, with_labels=True)
    plt.show()

# example
traceroute("www.example.com", 30)